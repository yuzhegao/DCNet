layer {
  name: "data"
  type: "ImageLabelmapData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    crop_size: 320
    mean_value: 104.006988525
    mean_value: 116.668769836
    mean_value: 122.678916931
  }
  image_data_param {
    source: "../../data/PIOD/Augmentation/train_pair_320x320.lst"
    batch_size: 5
    shuffle: true
    new_height: 0
    new_width: 0
    root_folder: ""
    data_type: "h5"
  }
}
layer {
  name: "label_edge"
  type: "Slice"
  bottom: "label"
  top: "label_edge"
  top: "label_ori"
  slice_param {
    slice_point: 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn_conv1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale_conv1"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_relu"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1_relu"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_relu"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "res2a_branch1"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch1"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn2a_branch1"
  type: "BatchNorm"
  bottom: "res2a_branch1"
  top: "res2a_branch1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2a_branch1"
  type: "Scale"
  bottom: "res2a_branch1"
  top: "res2a_branch1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn2a_branch2a"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2a_branch2a"
  type: "Scale"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a_branch2a_relu"
  type: "ReLU"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a"
  top: "res2a_branch2b"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn2a_branch2b"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2a_branch2b"
  type: "Scale"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a_branch2b_relu"
  type: "ReLU"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
}
layer {
  name: "res2a_branch2c"
  type: "Convolution"
  bottom: "res2a_branch2b"
  top: "res2a_branch2c"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn2a_branch2c"
  type: "BatchNorm"
  bottom: "res2a_branch2c"
  top: "res2a_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2a_branch2c"
  type: "Scale"
  bottom: "res2a_branch2c"
  top: "res2a_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a"
  type: "Eltwise"
  bottom: "res2a_branch1"
  bottom: "res2a_branch2c"
  top: "res2a"
}
layer {
  name: "res2a_relu"
  type: "ReLU"
  bottom: "res2a"
  top: "res2a"
}
layer {
  name: "res2b_branch2a"
  type: "Convolution"
  bottom: "res2a"
  top: "res2b_branch2a"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn2b_branch2a"
  type: "BatchNorm"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2b_branch2a"
  type: "Scale"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2b_branch2a_relu"
  type: "ReLU"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
}
layer {
  name: "res2b_branch2b"
  type: "Convolution"
  bottom: "res2b_branch2a"
  top: "res2b_branch2b"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn2b_branch2b"
  type: "BatchNorm"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2b_branch2b"
  type: "Scale"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2b_branch2b_relu"
  type: "ReLU"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
}
layer {
  name: "res2b_branch2c"
  type: "Convolution"
  bottom: "res2b_branch2b"
  top: "res2b_branch2c"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn2b_branch2c"
  type: "BatchNorm"
  bottom: "res2b_branch2c"
  top: "res2b_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2b_branch2c"
  type: "Scale"
  bottom: "res2b_branch2c"
  top: "res2b_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2b"
  type: "Eltwise"
  bottom: "res2a"
  bottom: "res2b_branch2c"
  top: "res2b"
}
layer {
  name: "res2b_relu"
  type: "ReLU"
  bottom: "res2b"
  top: "res2b"
}
layer {
  name: "res2c_branch2a"
  type: "Convolution"
  bottom: "res2b"
  top: "res2c_branch2a"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn2c_branch2a"
  type: "BatchNorm"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2c_branch2a"
  type: "Scale"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_branch2a_relu"
  type: "ReLU"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
}
layer {
  name: "res2c_branch2b"
  type: "Convolution"
  bottom: "res2c_branch2a"
  top: "res2c_branch2b"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn2c_branch2b"
  type: "BatchNorm"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2c_branch2b"
  type: "Scale"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_branch2b_relu"
  type: "ReLU"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
}
layer {
  name: "res2c_branch2c"
  type: "Convolution"
  bottom: "res2c_branch2b"
  top: "res2c_branch2c"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn2c_branch2c"
  type: "BatchNorm"
  bottom: "res2c_branch2c"
  top: "res2c_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale2c_branch2c"
  type: "Scale"
  bottom: "res2c_branch2c"
  top: "res2c_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c"
  type: "Eltwise"
  bottom: "res2b"
  bottom: "res2c_branch2c"
  top: "res2c"
}
layer {
  name: "res2c_relu"
  type: "ReLU"
  bottom: "res2c"
  top: "res2c"
}
layer {
  name: "res3a_branch1"
  type: "Convolution"
  bottom: "res2c"
  top: "res3a_branch1"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3a_branch1"
  type: "BatchNorm"
  bottom: "res3a_branch1"
  top: "res3a_branch1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3a_branch1"
  type: "Scale"
  bottom: "res3a_branch1"
  top: "res3a_branch1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_branch2a"
  type: "Convolution"
  bottom: "res2c"
  top: "res3a_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3a_branch2a"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3a_branch2a"
  type: "Scale"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_branch2a_relu"
  type: "ReLU"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
}
layer {
  name: "res3a_branch2b"
  type: "Convolution"
  bottom: "res3a_branch2a"
  top: "res3a_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3a_branch2b"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3a_branch2b"
  type: "Scale"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_branch2b_relu"
  type: "ReLU"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
}
layer {
  name: "res3a_branch2c"
  type: "Convolution"
  bottom: "res3a_branch2b"
  top: "res3a_branch2c"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3a_branch2c"
  type: "BatchNorm"
  bottom: "res3a_branch2c"
  top: "res3a_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3a_branch2c"
  type: "Scale"
  bottom: "res3a_branch2c"
  top: "res3a_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a"
  type: "Eltwise"
  bottom: "res3a_branch1"
  bottom: "res3a_branch2c"
  top: "res3a"
}
layer {
  name: "res3a_relu"
  type: "ReLU"
  bottom: "res3a"
  top: "res3a"
}
layer {
  name: "res3b_branch2a"
  type: "Convolution"
  bottom: "res3a"
  top: "res3b_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3b_branch2a"
  type: "BatchNorm"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3b_branch2a"
  type: "Scale"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3b_branch2a_relu"
  type: "ReLU"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
}
layer {
  name: "res3b_branch2b"
  type: "Convolution"
  bottom: "res3b_branch2a"
  top: "res3b_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3b_branch2b"
  type: "BatchNorm"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3b_branch2b"
  type: "Scale"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3b_branch2b_relu"
  type: "ReLU"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
}
layer {
  name: "res3b_branch2c"
  type: "Convolution"
  bottom: "res3b_branch2b"
  top: "res3b_branch2c"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3b_branch2c"
  type: "BatchNorm"
  bottom: "res3b_branch2c"
  top: "res3b_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3b_branch2c"
  type: "Scale"
  bottom: "res3b_branch2c"
  top: "res3b_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3b"
  type: "Eltwise"
  bottom: "res3a"
  bottom: "res3b_branch2c"
  top: "res3b"
}
layer {
  name: "res3b_relu"
  type: "ReLU"
  bottom: "res3b"
  top: "res3b"
}
layer {
  name: "res3c_branch2a"
  type: "Convolution"
  bottom: "res3b"
  top: "res3c_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3c_branch2a"
  type: "BatchNorm"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3c_branch2a"
  type: "Scale"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3c_branch2a_relu"
  type: "ReLU"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
}
layer {
  name: "res3c_branch2b"
  type: "Convolution"
  bottom: "res3c_branch2a"
  top: "res3c_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3c_branch2b"
  type: "BatchNorm"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3c_branch2b"
  type: "Scale"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3c_branch2b_relu"
  type: "ReLU"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
}
layer {
  name: "res3c_branch2c"
  type: "Convolution"
  bottom: "res3c_branch2b"
  top: "res3c_branch2c"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3c_branch2c"
  type: "BatchNorm"
  bottom: "res3c_branch2c"
  top: "res3c_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3c_branch2c"
  type: "Scale"
  bottom: "res3c_branch2c"
  top: "res3c_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3c"
  type: "Eltwise"
  bottom: "res3b"
  bottom: "res3c_branch2c"
  top: "res3c"
}
layer {
  name: "res3c_relu"
  type: "ReLU"
  bottom: "res3c"
  top: "res3c"
}
layer {
  name: "res3d_branch2a"
  type: "Convolution"
  bottom: "res3c"
  top: "res3d_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3d_branch2a"
  type: "BatchNorm"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3d_branch2a"
  type: "Scale"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_branch2a_relu"
  type: "ReLU"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
}
layer {
  name: "res3d_branch2b"
  type: "Convolution"
  bottom: "res3d_branch2a"
  top: "res3d_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3d_branch2b"
  type: "BatchNorm"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3d_branch2b"
  type: "Scale"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_branch2b_relu"
  type: "ReLU"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
}
layer {
  name: "res3d_branch2c"
  type: "Convolution"
  bottom: "res3d_branch2b"
  top: "res3d_branch2c"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn3d_branch2c"
  type: "BatchNorm"
  bottom: "res3d_branch2c"
  top: "res3d_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale3d_branch2c"
  type: "Scale"
  bottom: "res3d_branch2c"
  top: "res3d_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d"
  type: "Eltwise"
  bottom: "res3c"
  bottom: "res3d_branch2c"
  top: "res3d"
}
layer {
  name: "res3d_relu"
  type: "ReLU"
  bottom: "res3d"
  top: "res3d"
}
layer {
  name: "res4a_branch1"
  type: "Convolution"
  bottom: "res3d"
  top: "res4a_branch1"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4a_branch1"
  type: "BatchNorm"
  bottom: "res4a_branch1"
  top: "res4a_branch1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4a_branch1"
  type: "Scale"
  bottom: "res4a_branch1"
  top: "res4a_branch1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2a"
  type: "Convolution"
  bottom: "res3d"
  top: "res4a_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4a_branch2a"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4a_branch2a"
  type: "Scale"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2a_relu"
  type: "ReLU"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
}
layer {
  name: "res4a_branch2b"
  type: "Convolution"
  bottom: "res4a_branch2a"
  top: "res4a_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4a_branch2b"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4a_branch2b"
  type: "Scale"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2b_relu"
  type: "ReLU"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
}
layer {
  name: "res4a_branch2c"
  type: "Convolution"
  bottom: "res4a_branch2b"
  top: "res4a_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4a_branch2c"
  type: "BatchNorm"
  bottom: "res4a_branch2c"
  top: "res4a_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4a_branch2c"
  type: "Scale"
  bottom: "res4a_branch2c"
  top: "res4a_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a"
  type: "Eltwise"
  bottom: "res4a_branch1"
  bottom: "res4a_branch2c"
  top: "res4a"
}
layer {
  name: "res4a_relu"
  type: "ReLU"
  bottom: "res4a"
  top: "res4a"
}
layer {
  name: "res4b_branch2a"
  type: "Convolution"
  bottom: "res4a"
  top: "res4b_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4b_branch2a"
  type: "BatchNorm"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4b_branch2a"
  type: "Scale"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b_branch2a_relu"
  type: "ReLU"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
}
layer {
  name: "res4b_branch2b"
  type: "Convolution"
  bottom: "res4b_branch2a"
  top: "res4b_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4b_branch2b"
  type: "BatchNorm"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4b_branch2b"
  type: "Scale"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b_branch2b_relu"
  type: "ReLU"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
}
layer {
  name: "res4b_branch2c"
  type: "Convolution"
  bottom: "res4b_branch2b"
  top: "res4b_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4b_branch2c"
  type: "BatchNorm"
  bottom: "res4b_branch2c"
  top: "res4b_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4b_branch2c"
  type: "Scale"
  bottom: "res4b_branch2c"
  top: "res4b_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b"
  type: "Eltwise"
  bottom: "res4a"
  bottom: "res4b_branch2c"
  top: "res4b"
}
layer {
  name: "res4b_relu"
  type: "ReLU"
  bottom: "res4b"
  top: "res4b"
}
layer {
  name: "res4c_branch2a"
  type: "Convolution"
  bottom: "res4b"
  top: "res4c_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4c_branch2a"
  type: "BatchNorm"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4c_branch2a"
  type: "Scale"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c_branch2a_relu"
  type: "ReLU"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
}
layer {
  name: "res4c_branch2b"
  type: "Convolution"
  bottom: "res4c_branch2a"
  top: "res4c_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4c_branch2b"
  type: "BatchNorm"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4c_branch2b"
  type: "Scale"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c_branch2b_relu"
  type: "ReLU"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
}
layer {
  name: "res4c_branch2c"
  type: "Convolution"
  bottom: "res4c_branch2b"
  top: "res4c_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4c_branch2c"
  type: "BatchNorm"
  bottom: "res4c_branch2c"
  top: "res4c_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4c_branch2c"
  type: "Scale"
  bottom: "res4c_branch2c"
  top: "res4c_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c"
  type: "Eltwise"
  bottom: "res4b"
  bottom: "res4c_branch2c"
  top: "res4c"
}
layer {
  name: "res4c_relu"
  type: "ReLU"
  bottom: "res4c"
  top: "res4c"
}
layer {
  name: "res4d_branch2a"
  type: "Convolution"
  bottom: "res4c"
  top: "res4d_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4d_branch2a"
  type: "BatchNorm"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4d_branch2a"
  type: "Scale"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d_branch2a_relu"
  type: "ReLU"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
}
layer {
  name: "res4d_branch2b"
  type: "Convolution"
  bottom: "res4d_branch2a"
  top: "res4d_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4d_branch2b"
  type: "BatchNorm"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4d_branch2b"
  type: "Scale"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d_branch2b_relu"
  type: "ReLU"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
}
layer {
  name: "res4d_branch2c"
  type: "Convolution"
  bottom: "res4d_branch2b"
  top: "res4d_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4d_branch2c"
  type: "BatchNorm"
  bottom: "res4d_branch2c"
  top: "res4d_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4d_branch2c"
  type: "Scale"
  bottom: "res4d_branch2c"
  top: "res4d_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d"
  type: "Eltwise"
  bottom: "res4c"
  bottom: "res4d_branch2c"
  top: "res4d"
}
layer {
  name: "res4d_relu"
  type: "ReLU"
  bottom: "res4d"
  top: "res4d"
}
layer {
  name: "res4e_branch2a"
  type: "Convolution"
  bottom: "res4d"
  top: "res4e_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4e_branch2a"
  type: "BatchNorm"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4e_branch2a"
  type: "Scale"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e_branch2a_relu"
  type: "ReLU"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
}
layer {
  name: "res4e_branch2b"
  type: "Convolution"
  bottom: "res4e_branch2a"
  top: "res4e_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4e_branch2b"
  type: "BatchNorm"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4e_branch2b"
  type: "Scale"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e_branch2b_relu"
  type: "ReLU"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
}
layer {
  name: "res4e_branch2c"
  type: "Convolution"
  bottom: "res4e_branch2b"
  top: "res4e_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4e_branch2c"
  type: "BatchNorm"
  bottom: "res4e_branch2c"
  top: "res4e_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4e_branch2c"
  type: "Scale"
  bottom: "res4e_branch2c"
  top: "res4e_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e"
  type: "Eltwise"
  bottom: "res4d"
  bottom: "res4e_branch2c"
  top: "res4e"
}
layer {
  name: "res4e_relu"
  type: "ReLU"
  bottom: "res4e"
  top: "res4e"
}
layer {
  name: "res4f_branch2a"
  type: "Convolution"
  bottom: "res4e"
  top: "res4f_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4f_branch2a"
  type: "BatchNorm"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4f_branch2a"
  type: "Scale"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_branch2a_relu"
  type: "ReLU"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
}
layer {
  name: "res4f_branch2b"
  type: "Convolution"
  bottom: "res4f_branch2a"
  top: "res4f_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4f_branch2b"
  type: "BatchNorm"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4f_branch2b"
  type: "Scale"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_branch2b_relu"
  type: "ReLU"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
}
layer {
  name: "res4f_branch2c"
  type: "Convolution"
  bottom: "res4f_branch2b"
  top: "res4f_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn4f_branch2c"
  type: "BatchNorm"
  bottom: "res4f_branch2c"
  top: "res4f_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale4f_branch2c"
  type: "Scale"
  bottom: "res4f_branch2c"
  top: "res4f_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f"
  type: "Eltwise"
  bottom: "res4e"
  bottom: "res4f_branch2c"
  top: "res4f"
}
layer {
  name: "res4f_relu"
  type: "ReLU"
  bottom: "res4f"
  top: "res4f"
}
layer {
  name: "res5a_branch1"
  type: "Convolution"
  bottom: "res4f"
  top: "res5a_branch1"
  convolution_param {
    num_output: 2048
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn5a_branch1"
  type: "BatchNorm"
  bottom: "res5a_branch1"
  top: "res5a_branch1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale5a_branch1"
  type: "Scale"
  bottom: "res5a_branch1"
  top: "res5a_branch1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5a_branch2a"
  type: "Convolution"
  bottom: "res4f"
  top: "res5a_branch2a"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn5a_branch2a"
  type: "BatchNorm"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale5a_branch2a"
  type: "Scale"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5a_branch2a_relu"
  type: "ReLU"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
}
layer {
  name: "res5a_branch2b"
  type: "Convolution"
  bottom: "res5a_branch2a"
  top: "res5a_branch2b"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 2
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    dilation: 2
  }
}
layer {
  name: "bn5a_branch2b"
  type: "BatchNorm"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale5a_branch2b"
  type: "Scale"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5a_branch2b_relu"
  type: "ReLU"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
}
layer {
  name: "res5a_branch2c"
  type: "Convolution"
  bottom: "res5a_branch2b"
  top: "res5a_branch2c"
  convolution_param {
    num_output: 2048
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn5a_branch2c"
  type: "BatchNorm"
  bottom: "res5a_branch2c"
  top: "res5a_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale5a_branch2c"
  type: "Scale"
  bottom: "res5a_branch2c"
  top: "res5a_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5a"
  type: "Eltwise"
  bottom: "res5a_branch1"
  bottom: "res5a_branch2c"
  top: "res5a"
}
layer {
  name: "res5a_relu"
  type: "ReLU"
  bottom: "res5a"
  top: "res5a"
}
layer {
  name: "res5b_branch2a"
  type: "Convolution"
  bottom: "res5a"
  top: "res5b_branch2a"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn5b_branch2a"
  type: "BatchNorm"
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale5b_branch2a"
  type: "Scale"
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5b_branch2a_relu"
  type: "ReLU"
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
}
layer {
  name: "res5b_branch2b"
  type: "Convolution"
  bottom: "res5b_branch2a"
  top: "res5b_branch2b"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 4
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    dilation: 4
  }
}
layer {
  name: "bn5b_branch2b"
  type: "BatchNorm"
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale5b_branch2b"
  type: "Scale"
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5b_branch2b_relu"
  type: "ReLU"
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
}
layer {
  name: "res5b_branch2c"
  type: "Convolution"
  bottom: "res5b_branch2b"
  top: "res5b_branch2c"
  convolution_param {
    num_output: 2048
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn5b_branch2c"
  type: "BatchNorm"
  bottom: "res5b_branch2c"
  top: "res5b_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale5b_branch2c"
  type: "Scale"
  bottom: "res5b_branch2c"
  top: "res5b_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5b"
  type: "Eltwise"
  bottom: "res5a"
  bottom: "res5b_branch2c"
  top: "res5b"
}
layer {
  name: "res5b_relu"
  type: "ReLU"
  bottom: "res5b"
  top: "res5b"
}
layer {
  name: "res5c_branch2a"
  type: "Convolution"
  bottom: "res5b"
  top: "res5c_branch2a"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn5c_branch2a"
  type: "BatchNorm"
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale5c_branch2a"
  type: "Scale"
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5c_branch2a_relu"
  type: "ReLU"
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
}
layer {
  name: "res5c_branch2b"
  type: "Convolution"
  bottom: "res5c_branch2a"
  top: "res5c_branch2b"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 8
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    dilation: 8
  }
}
layer {
  name: "bn5c_branch2b"
  type: "BatchNorm"
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale5c_branch2b"
  type: "Scale"
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5c_branch2b_relu"
  type: "ReLU"
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
}
layer {
  name: "res5c_branch2c"
  type: "Convolution"
  bottom: "res5c_branch2b"
  top: "res5c_branch2c"
  convolution_param {
    num_output: 2048
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "bn5c_branch2c"
  type: "BatchNorm"
  bottom: "res5c_branch2c"
  top: "res5c_branch2c"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "scale5c_branch2c"
  type: "Scale"
  bottom: "res5c_branch2c"
  top: "res5c_branch2c"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5c"
  type: "Eltwise"
  bottom: "res5b"
  bottom: "res5c_branch2c"
  top: "res5c"
}
layer {
  name: "res5c_relu"
  type: "ReLU"
  bottom: "res5c"
  top: "res5c"
}
layer {
  name: "Convolution1"
  type: "Convolution"
  bottom: "conv1_relu"
  top: "Convolution1"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm1"
  type: "BatchNorm"
  bottom: "Convolution1"
  top: "Convolution1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale1"
  type: "Scale"
  bottom: "Convolution1"
  top: "Convolution1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_convert"
  type: "ReLU"
  bottom: "Convolution1"
  top: "Convolution1"
}
layer {
  name: "Convolution2"
  type: "Convolution"
  bottom: "res2c"
  top: "Convolution2"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm2"
  type: "BatchNorm"
  bottom: "Convolution2"
  top: "Convolution2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale2"
  type: "Scale"
  bottom: "Convolution2"
  top: "Convolution2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_convert"
  type: "ReLU"
  bottom: "Convolution2"
  top: "Convolution2"
}
layer {
  name: "Convolution3"
  type: "Convolution"
  bottom: "res3d"
  top: "Convolution3"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm3"
  type: "BatchNorm"
  bottom: "Convolution3"
  top: "Convolution3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale3"
  type: "Scale"
  bottom: "Convolution3"
  top: "Convolution3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_convert"
  type: "ReLU"
  bottom: "Convolution3"
  top: "Convolution3"
}
layer {
  name: "Convolution4"
  type: "Convolution"
  bottom: "res4f"
  top: "Convolution4"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm4"
  type: "BatchNorm"
  bottom: "Convolution4"
  top: "Convolution4"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale4"
  type: "Scale"
  bottom: "Convolution4"
  top: "Convolution4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_convert"
  type: "ReLU"
  bottom: "Convolution4"
  top: "Convolution4"
}
layer {
  name: "Convolution5"
  type: "Convolution"
  bottom: "res4f"
  top: "Convolution5"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm5"
  type: "BatchNorm"
  bottom: "Convolution5"
  top: "Convolution5"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale5"
  type: "Scale"
  bottom: "Convolution5"
  top: "Convolution5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_convert2"
  type: "ReLU"
  bottom: "Convolution5"
  top: "Convolution5"
}
layer {
  name: "plain6a_conv"
  type: "Convolution"
  bottom: "res5c"
  top: "plain6a_conv"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "plain6a_bn"
  type: "BatchNorm"
  bottom: "plain6a_conv"
  top: "plain6a_conv"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "plain6a_scale"
  type: "Scale"
  bottom: "plain6a_conv"
  top: "plain6a_conv"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "plain6a_relu"
  type: "ReLU"
  bottom: "plain6a_conv"
  top: "plain6a_conv"
}
layer {
  name: "plain6b_conv"
  type: "Convolution"
  bottom: "plain6a_conv"
  top: "plain6b_conv"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "plain6b_bn"
  type: "BatchNorm"
  bottom: "plain6b_conv"
  top: "plain6b_conv"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "plain6b_scale"
  type: "Scale"
  bottom: "plain6b_conv"
  top: "plain6b_conv"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "plain6b_relu"
  type: "ReLU"
  bottom: "plain6b_conv"
  top: "plain6b_conv"
}
layer {
  name: "plain7a_conv"
  type: "Convolution"
  bottom: "res5c"
  top: "plain7a_conv"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "plain7a_bn"
  type: "BatchNorm"
  bottom: "plain7a_conv"
  top: "plain7a_conv"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "plain7a_scale"
  type: "Scale"
  bottom: "plain7a_conv"
  top: "plain7a_conv"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "plain7a_relu"
  type: "ReLU"
  bottom: "plain7a_conv"
  top: "plain7a_conv"
}
layer {
  name: "plain7b_conv"
  type: "Convolution"
  bottom: "plain7a_conv"
  top: "plain7b_conv"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "plain7b_bn"
  type: "BatchNorm"
  bottom: "plain7b_conv"
  top: "plain7b_conv"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "plain7b_scale"
  type: "Scale"
  bottom: "plain7b_conv"
  top: "plain7b_conv"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "plain7b_relu"
  type: "ReLU"
  bottom: "plain7b_conv"
  top: "plain7b_conv"
}
layer {
  name: "encoder_hl_concat"
  type: "Concat"
  bottom: "plain6b_conv"
  bottom: "Convolution5"
  top: "encoder_hl_concat"
}
layer {
  name: "encoder_hl"
  type: "Convolution"
  bottom: "encoder_hl_concat"
  top: "encoder_hl"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm6"
  type: "BatchNorm"
  bottom: "encoder_hl"
  top: "encoder_hl"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale6"
  type: "Scale"
  bottom: "encoder_hl"
  top: "encoder_hl"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "encoder_hl_relu"
  type: "ReLU"
  bottom: "encoder_hl"
  top: "encoder_hl"
}
layer {
  name: "res4f_rescale1"
  type: "Crop"
  bottom: "plain6b_conv"
  bottom: "Convolution4"
  top: "res4f_rescale1"
  crop_param {
    axis: 2
  }
}
layer {
  name: "res4f_refine"
  type: "Convolution"
  bottom: "res4f_rescale1"
  top: "res4f_refine"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm7"
  type: "BatchNorm"
  bottom: "res4f_refine"
  top: "res4f_refine"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale7"
  type: "Scale"
  bottom: "res4f_refine"
  top: "res4f_refine"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_refine_relu"
  type: "ReLU"
  bottom: "res4f_refine"
  top: "res4f_refine"
}
layer {
  name: "res4f_mul"
  type: "Eltwise"
  bottom: "res4f_refine"
  bottom: "Convolution4"
  top: "res4f_mul"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "res4f_refine2"
  type: "Convolution"
  bottom: "res4f_mul"
  top: "res4f_refine2"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm8"
  type: "BatchNorm"
  bottom: "res4f_refine2"
  top: "res4f_refine2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale8"
  type: "Scale"
  bottom: "res4f_refine2"
  top: "res4f_refine2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_refine2_relu"
  type: "ReLU"
  bottom: "res4f_refine2"
  top: "res4f_refine2"
}
layer {
  name: "res4f_mul_add"
  type: "Eltwise"
  bottom: "res4f_rescale1"
  bottom: "res4f_refine2"
  top: "res4f_mul_add"
}
layer {
  name: "res4f_fuse"
  type: "Convolution"
  bottom: "res4f_mul_add"
  top: "res4f_fuse"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm9"
  type: "BatchNorm"
  bottom: "res4f_fuse"
  top: "res4f_fuse"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale9"
  type: "Scale"
  bottom: "res4f_fuse"
  top: "res4f_fuse"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_fuse_relu"
  type: "ReLU"
  bottom: "res4f_fuse"
  top: "res4f_fuse"
}
layer {
  name: "N2_conv"
  type: "Convolution"
  bottom: "res4f_fuse"
  top: "N2_conv"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "N2_mask"
  type: "Convolution"
  bottom: "res4f_fuse"
  top: "N2_mask"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 1
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "N2_mask_sigmoid"
  type: "Sigmoid"
  bottom: "N2_mask"
  top: "N2_mask_sigmoid"
}
layer {
  name: "N2_mask_tile"
  type: "Tile"
  bottom: "N2_mask_sigmoid"
  top: "N2_mask_tile"
  tile_param {
    axis: 1
    tiles: 128
  }
}
layer {
  name: "N2_mask_reverse"
  type: "Power"
  bottom: "N2_mask_tile"
  top: "N2_mask_reverse"
  power_param {
    power: -1.0
    scale: 1.0
    shift: 1.0
  }
}
layer {
  name: "theta"
  type: "Convolution"
  bottom: "encoder_hl"
  top: "theta"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "theta1"
  type: "Eltwise"
  bottom: "theta"
  bottom: "N2_mask_tile"
  top: "theta1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "theta2"
  type: "Eltwise"
  bottom: "theta"
  bottom: "N2_mask_reverse"
  top: "theta2"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "phi"
  type: "Convolution"
  bottom: "encoder_hl"
  top: "phi"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "phi1"
  type: "Eltwise"
  bottom: "phi"
  bottom: "N2_mask_tile"
  top: "phi1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "phi2"
  type: "Eltwise"
  bottom: "phi"
  bottom: "N2_mask_reverse"
  top: "phi2"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "G"
  type: "Convolution"
  bottom: "encoder_hl"
  top: "G"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "theta_reshape"
  type: "Reshape"
  bottom: "theta1"
  top: "theta_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
      dim: -1
    }
  }
}
layer {
  name: "phi_reshape"
  type: "Reshape"
  bottom: "phi1"
  top: "phi_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
      dim: -1
    }
  }
}
layer {
  name: "theta_transpose"
  type: "TensorTranspose"
  bottom: "theta_reshape"
  top: "theta_transpose"
  tensor_transpose_param {
    order: 0
    order: 2
    order: 1
  }
}
layer {
  name: "ajacent"
  type: "MatrixMultiplication"
  bottom: "theta_transpose"
  bottom: "phi_reshape"
  top: "ajacent"
}
layer {
  name: "ajacent_softmax"
  type: "Softmax"
  bottom: "ajacent"
  top: "ajacent_softmax"
  softmax_param {
    axis: 2
  }
}
layer {
  name: "theta_reshape2"
  type: "Reshape"
  bottom: "theta2"
  top: "theta_reshape2"
  reshape_param {
    shape {
      dim: 0
      dim: 0
      dim: -1
    }
  }
}
layer {
  name: "phi_reshape2"
  type: "Reshape"
  bottom: "phi2"
  top: "phi_reshape2"
  reshape_param {
    shape {
      dim: 0
      dim: 0
      dim: -1
    }
  }
}
layer {
  name: "theta_transpose2"
  type: "TensorTranspose"
  bottom: "theta_reshape2"
  top: "theta_transpose2"
  tensor_transpose_param {
    order: 0
    order: 2
    order: 1
  }
}
layer {
  name: "ajacent2"
  type: "MatrixMultiplication"
  bottom: "theta_transpose2"
  bottom: "phi_reshape2"
  top: "ajacent2"
}
layer {
  name: "ajacent_softmax2"
  type: "Softmax"
  bottom: "ajacent2"
  top: "ajacent_softmax2"
  softmax_param {
    axis: 2
  }
}
layer {
  name: "N2_reshape"
  type: "Reshape"
  bottom: "G"
  top: "N2_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
      dim: -1
    }
  }
}
layer {
  name: "N2_transpose"
  type: "TensorTranspose"
  bottom: "N2_reshape"
  top: "N2_transpose"
  tensor_transpose_param {
    order: 0
    order: 2
    order: 1
  }
}
layer {
  name: "N2_weightadd"
  type: "MatrixMultiplication"
  bottom: "ajacent_softmax"
  bottom: "N2_transpose"
  top: "N2_weightadd"
}
layer {
  name: "N2_weightadd_transpose"
  type: "TensorTranspose"
  bottom: "N2_weightadd"
  top: "N2_weightadd_transpose"
  tensor_transpose_param {
    order: 0
    order: 2
    order: 1
  }
}
layer {
  name: "N2_weightadd_reshape"
  type: "Reshape"
  bottom: "N2_weightadd_transpose"
  top: "N2_weightadd_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
      dim: 20
      dim: 20
    }
  }
}
layer {
  name: "N2_weightadd2"
  type: "MatrixMultiplication"
  bottom: "ajacent_softmax2"
  bottom: "N2_transpose"
  top: "N2_weightadd2"
}
layer {
  name: "N2_weightadd_transpose2"
  type: "TensorTranspose"
  bottom: "N2_weightadd2"
  top: "N2_weightadd_transpose2"
  tensor_transpose_param {
    order: 0
    order: 2
    order: 1
  }
}
layer {
  name: "N2_weightadd_reshape2"
  type: "Reshape"
  bottom: "N2_weightadd_transpose2"
  top: "N2_weightadd_reshape2"
  reshape_param {
    shape {
      dim: 0
      dim: 0
      dim: 20
      dim: 20
    }
  }
}
layer {
  name: "BCP_out"
  type: "Eltwise"
  bottom: "N2_conv"
  bottom: "N2_weightadd_reshape"
  bottom: "N2_weightadd_reshape2"
  top: "BCP_out"
}
layer {
  name: "res3d_rescale"
  type: "Deconvolution"
  bottom: "BCP_out"
  top: "res3d_rescale"
  param {
    lr_mult: 0.0
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 4
    group: 128
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "res3d_rescale1"
  type: "Crop"
  bottom: "res3d_rescale"
  bottom: "Convolution3"
  top: "res3d_rescale1"
  crop_param {
    axis: 2
  }
}
layer {
  name: "res3d_refine"
  type: "Convolution"
  bottom: "res3d_rescale1"
  top: "res3d_refine"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm10"
  type: "BatchNorm"
  bottom: "res3d_refine"
  top: "res3d_refine"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale10"
  type: "Scale"
  bottom: "res3d_refine"
  top: "res3d_refine"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_refine_relu"
  type: "ReLU"
  bottom: "res3d_refine"
  top: "res3d_refine"
}
layer {
  name: "res3d_mul"
  type: "Eltwise"
  bottom: "res3d_refine"
  bottom: "Convolution3"
  top: "res3d_mul"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "res3d_refine2"
  type: "Convolution"
  bottom: "res3d_mul"
  top: "res3d_refine2"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm11"
  type: "BatchNorm"
  bottom: "res3d_refine2"
  top: "res3d_refine2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale11"
  type: "Scale"
  bottom: "res3d_refine2"
  top: "res3d_refine2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_refine2_relu"
  type: "ReLU"
  bottom: "res3d_refine2"
  top: "res3d_refine2"
}
layer {
  name: "res3d_mul_add"
  type: "Eltwise"
  bottom: "res3d_rescale1"
  bottom: "res3d_refine2"
  top: "res3d_mul_add"
}
layer {
  name: "res3d_fuse"
  type: "Convolution"
  bottom: "res3d_mul_add"
  top: "res3d_fuse"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm12"
  type: "BatchNorm"
  bottom: "res3d_fuse"
  top: "res3d_fuse"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale12"
  type: "Scale"
  bottom: "res3d_fuse"
  top: "res3d_fuse"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_fuse_relu"
  type: "ReLU"
  bottom: "res3d_fuse"
  top: "res3d_fuse"
}
layer {
  name: "res2c_rescale"
  type: "Deconvolution"
  bottom: "res3d_fuse"
  top: "res2c_rescale"
  param {
    lr_mult: 0.0
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 4
    group: 128
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "res2c_rescale1"
  type: "Crop"
  bottom: "res2c_rescale"
  bottom: "Convolution2"
  top: "res2c_rescale1"
  crop_param {
    axis: 2
  }
}
layer {
  name: "res2c_refine"
  type: "Convolution"
  bottom: "res2c_rescale1"
  top: "res2c_refine"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm13"
  type: "BatchNorm"
  bottom: "res2c_refine"
  top: "res2c_refine"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale13"
  type: "Scale"
  bottom: "res2c_refine"
  top: "res2c_refine"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_refine_relu"
  type: "ReLU"
  bottom: "res2c_refine"
  top: "res2c_refine"
}
layer {
  name: "res2c_mul"
  type: "Eltwise"
  bottom: "res2c_refine"
  bottom: "Convolution2"
  top: "res2c_mul"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "res2c_refine2"
  type: "Convolution"
  bottom: "res2c_mul"
  top: "res2c_refine2"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm14"
  type: "BatchNorm"
  bottom: "res2c_refine2"
  top: "res2c_refine2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale14"
  type: "Scale"
  bottom: "res2c_refine2"
  top: "res2c_refine2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_refine2_relu"
  type: "ReLU"
  bottom: "res2c_refine2"
  top: "res2c_refine2"
}
layer {
  name: "res2c_mul_add"
  type: "Eltwise"
  bottom: "res2c_rescale1"
  bottom: "res2c_refine2"
  top: "res2c_mul_add"
}
layer {
  name: "res2c_fuse"
  type: "Convolution"
  bottom: "res2c_mul_add"
  top: "res2c_fuse"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm15"
  type: "BatchNorm"
  bottom: "res2c_fuse"
  top: "res2c_fuse"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale15"
  type: "Scale"
  bottom: "res2c_fuse"
  top: "res2c_fuse"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_fuse_relu"
  type: "ReLU"
  bottom: "res2c_fuse"
  top: "res2c_fuse"
}
layer {
  name: "res1a_rescale"
  type: "Deconvolution"
  bottom: "res2c_fuse"
  top: "res1a_rescale"
  param {
    lr_mult: 0.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 4
    group: 64
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "Crop1"
  type: "Crop"
  bottom: "res1a_rescale"
  bottom: "Convolution1"
  top: "Crop1"
  crop_param {
    axis: 2
  }
}
layer {
  name: "res1a_refine"
  type: "Convolution"
  bottom: "Crop1"
  top: "res1a_refine"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm16"
  type: "BatchNorm"
  bottom: "res1a_refine"
  top: "res1a_refine"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale16"
  type: "Scale"
  bottom: "res1a_refine"
  top: "res1a_refine"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res1a_refine_relu"
  type: "ReLU"
  bottom: "res1a_refine"
  top: "res1a_refine"
}
layer {
  name: "res1a_mul"
  type: "Eltwise"
  bottom: "res1a_refine"
  bottom: "Convolution1"
  top: "res1a_mul"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "res1a_refine2"
  type: "Convolution"
  bottom: "res1a_mul"
  top: "res1a_refine2"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm17"
  type: "BatchNorm"
  bottom: "res1a_refine2"
  top: "res1a_refine2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale17"
  type: "Scale"
  bottom: "res1a_refine2"
  top: "res1a_refine2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res1a_refine2_relu"
  type: "ReLU"
  bottom: "res1a_refine2"
  top: "res1a_refine2"
}
layer {
  name: "res1a_mul_add"
  type: "Eltwise"
  bottom: "Crop1"
  bottom: "res1a_refine2"
  top: "res1a_mul_add"
}
layer {
  name: "res1a_fuse"
  type: "Convolution"
  bottom: "res1a_mul_add"
  top: "res1a_fuse"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm18"
  type: "BatchNorm"
  bottom: "res1a_fuse"
  top: "res1a_fuse"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale18"
  type: "Scale"
  bottom: "res1a_fuse"
  top: "res1a_fuse"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res1a_fuse_relu"
  type: "ReLU"
  bottom: "res1a_fuse"
  top: "res1a_fuse"
}
layer {
  name: "res1a_rescale1"
  type: "Deconvolution"
  bottom: "res1a_fuse"
  top: "res1a_rescale1"
  param {
    lr_mult: 0.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 4
    group: 64
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "res1a_rescale2"
  type: "Crop"
  bottom: "res1a_rescale1"
  bottom: "data"
  top: "res1a_rescale2"
  crop_param {
    axis: 2
  }
}
layer {
  name: "unet1a_plain1a_conv_edge"
  type: "Convolution"
  bottom: "res1a_rescale2"
  top: "unet1a_plain1a_conv_edge"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 8
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "unet1a_plain1a_bn_edge"
  type: "BatchNorm"
  bottom: "unet1a_plain1a_conv_edge"
  top: "unet1a_plain1a_conv_edge"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "unet1a_plain1a_scale_edge"
  type: "Scale"
  bottom: "unet1a_plain1a_conv_edge"
  top: "unet1a_plain1a_conv_edge"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "unet1a_plain1a_relu_edge"
  type: "ReLU"
  bottom: "unet1a_plain1a_conv_edge"
  top: "unet1a_plain1a_conv_edge"
}
layer {
  name: "unet1b_plain1b_conv_edge"
  type: "Convolution"
  bottom: "unet1a_plain1a_conv_edge"
  top: "unet1b_plain1b_conv_edge"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 4
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "unet1b_plain1b_bn_edge"
  type: "BatchNorm"
  bottom: "unet1b_plain1b_conv_edge"
  top: "unet1b_plain1b_conv_edge"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "unet1b_plain1b_scale_edge"
  type: "Scale"
  bottom: "unet1b_plain1b_conv_edge"
  top: "unet1b_plain1b_conv_edge"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "unet1b_plain1b_relu_edge"
  type: "ReLU"
  bottom: "unet1b_plain1b_conv_edge"
  top: "unet1b_plain1b_conv_edge"
}
layer {
  name: "unet1b_edge"
  type: "Convolution"
  bottom: "unet1b_plain1b_conv_edge"
  top: "unet1b_edge"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 1
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "aspp_1"
  type: "Convolution"
  bottom: "plain7b_conv"
  top: "aspp_1"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm19"
  type: "BatchNorm"
  bottom: "aspp_1"
  top: "aspp_1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale19"
  type: "Scale"
  bottom: "aspp_1"
  top: "aspp_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_aspp_1"
  type: "ReLU"
  bottom: "aspp_1"
  top: "aspp_1"
}
layer {
  name: "aspp_2"
  type: "Convolution"
  bottom: "plain7b_conv"
  top: "aspp_2"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 2
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    dilation: 2
  }
}
layer {
  name: "BatchNorm20"
  type: "BatchNorm"
  bottom: "aspp_2"
  top: "aspp_2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale20"
  type: "Scale"
  bottom: "aspp_2"
  top: "aspp_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_aspp_2"
  type: "ReLU"
  bottom: "aspp_2"
  top: "aspp_2"
}
layer {
  name: "aspp_3"
  type: "Convolution"
  bottom: "plain7b_conv"
  top: "aspp_3"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 3
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    dilation: 3
  }
}
layer {
  name: "BatchNorm21"
  type: "BatchNorm"
  bottom: "aspp_3"
  top: "aspp_3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale21"
  type: "Scale"
  bottom: "aspp_3"
  top: "aspp_3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_aspp_3"
  type: "ReLU"
  bottom: "aspp_3"
  top: "aspp_3"
}
layer {
  name: "aspp_4"
  type: "Convolution"
  bottom: "plain7b_conv"
  top: "aspp_4"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 6
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    dilation: 6
  }
}
layer {
  name: "BatchNorm22"
  type: "BatchNorm"
  bottom: "aspp_4"
  top: "aspp_4"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale22"
  type: "Scale"
  bottom: "aspp_4"
  top: "aspp_4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_aspp_4"
  type: "ReLU"
  bottom: "aspp_4"
  top: "aspp_4"
}
layer {
  name: "aspp_concat"
  type: "Concat"
  bottom: "aspp_1"
  bottom: "aspp_2"
  bottom: "aspp_3"
  bottom: "aspp_4"
  top: "aspp_concat"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "aspp_refine"
  type: "Convolution"
  bottom: "aspp_concat"
  top: "aspp_refine"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm23"
  type: "BatchNorm"
  bottom: "aspp_refine"
  top: "aspp_refine"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale23"
  type: "Scale"
  bottom: "aspp_refine"
  top: "aspp_refine"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "aspp_refine_relu"
  type: "ReLU"
  bottom: "aspp_refine"
  top: "aspp_refine"
}
layer {
  name: "aspp_refine2"
  type: "Convolution"
  bottom: "aspp_refine"
  top: "aspp_refine2"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 16
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm24"
  type: "BatchNorm"
  bottom: "aspp_refine2"
  top: "aspp_refine2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale24"
  type: "Scale"
  bottom: "aspp_refine2"
  top: "aspp_refine2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "aspp_refine2_relu"
  type: "ReLU"
  bottom: "aspp_refine2"
  top: "aspp_refine2"
}
layer {
  name: "aspp_rescale"
  type: "Deconvolution"
  bottom: "aspp_refine2"
  top: "aspp_rescale"
  param {
    lr_mult: 0.0
  }
  convolution_param {
    num_output: 16
    bias_term: false
    pad: 0
    kernel_size: 32
    group: 16
    stride: 16
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "aspp_crop2"
  type: "Crop"
  bottom: "aspp_rescale"
  bottom: "data"
  top: "aspp_crop2"
  crop_param {
    axis: 2
  }
}
layer {
  name: "ori_branch_feat_1_conv"
  type: "Convolution"
  bottom: "plain7b_conv"
  top: "ori_branch_feat_1_conv"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 16
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm25"
  type: "BatchNorm"
  bottom: "ori_branch_feat_1_conv"
  top: "ori_branch_feat_1_conv"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale25"
  type: "Scale"
  bottom: "ori_branch_feat_1_conv"
  top: "ori_branch_feat_1_conv"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ori_branch_feat_1_relu"
  type: "ReLU"
  bottom: "ori_branch_feat_1_conv"
  top: "ori_branch_feat_1_conv"
}
layer {
  name: "ori_branch_feat_rescale1"
  type: "Deconvolution"
  bottom: "ori_branch_feat_1_conv"
  top: "ori_branch_feat_rescale1"
  param {
    lr_mult: 0.0
  }
  convolution_param {
    num_output: 16
    bias_term: false
    pad: 0
    kernel_size: 8
    group: 16
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "ori_branch_feat_2_conv"
  type: "Convolution"
  bottom: "ori_branch_feat_rescale1"
  top: "ori_branch_feat_2_conv"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm26"
  type: "BatchNorm"
  bottom: "ori_branch_feat_2_conv"
  top: "ori_branch_feat_2_conv"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale26"
  type: "Scale"
  bottom: "ori_branch_feat_2_conv"
  top: "ori_branch_feat_2_conv"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ori_branch_feat_2_relu"
  type: "ReLU"
  bottom: "ori_branch_feat_2_conv"
  top: "ori_branch_feat_2_conv"
}
layer {
  name: "ori_branch_feat_rescale2"
  type: "Deconvolution"
  bottom: "ori_branch_feat_2_conv"
  top: "ori_branch_feat_rescale2"
  param {
    lr_mult: 0.0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 0
    kernel_size: 8
    group: 8
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "ori_branch_feat_rescale3"
  type: "Crop"
  bottom: "ori_branch_feat_rescale2"
  bottom: "data"
  top: "ori_branch_feat_rescale3"
  crop_param {
    axis: 2
  }
}
layer {
  name: "ori_concat"
  type: "Concat"
  bottom: "ori_branch_feat_rescale3"
  bottom: "aspp_crop2"
  bottom: "unet1a_plain1a_conv_edge"
  top: "ori_concat"
  propagate_down: true
  propagate_down: true
  propagate_down: false
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "unet1a_plain1a_conv_ori"
  type: "Convolution"
  bottom: "ori_concat"
  top: "unet1a_plain1a_conv_ori"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 8
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "unet1a_plain1a_bn_ori"
  type: "BatchNorm"
  bottom: "unet1a_plain1a_conv_ori"
  top: "unet1a_plain1a_conv_ori"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "unet1a_plain1a_scale_ori"
  type: "Scale"
  bottom: "unet1a_plain1a_conv_ori"
  top: "unet1a_plain1a_conv_ori"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "unet1a_plain1a_relu_ori"
  type: "ReLU"
  bottom: "unet1a_plain1a_conv_ori"
  top: "unet1a_plain1a_conv_ori"
}
layer {
  name: "unet1b_plain1b_conv_ori"
  type: "Convolution"
  bottom: "unet1a_plain1a_conv_ori"
  top: "unet1b_plain1b_conv_ori"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 4
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "unet1b_plain1b_bn_ori"
  type: "BatchNorm"
  bottom: "unet1b_plain1b_conv_ori"
  top: "unet1b_plain1b_conv_ori"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "unet1b_plain1b_scale_ori"
  type: "Scale"
  bottom: "unet1b_plain1b_conv_ori"
  top: "unet1b_plain1b_conv_ori"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "unet1b_plain1b_relu_ori"
  type: "ReLU"
  bottom: "unet1b_plain1b_conv_ori"
  top: "unet1b_plain1b_conv_ori"
}
layer {
  name: "unet1b_ori"
  type: "Convolution"
  bottom: "unet1b_plain1b_conv_ori"
  top: "unet1b_ori"
  param {
    lr_mult: 10.0
  }
  convolution_param {
    num_output: 1
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "edge_loss"
  type: "ClassBalancedSigmoidCrossEntropyAttentionLoss"
  bottom: "unet1b_edge"
  bottom: "label_edge"
  top: "edge_loss"
  loss_weight: 1.0
  attention_loss_param {
    beta: 4.0
    gamma: 0.5
  }
}
layer {
  name: "ori_loss"
  type: "OrientationSmoothL1Loss"
  bottom: "unet1b_ori"
  bottom: "label_ori"
  bottom: "label_edge"
  top: "ori_loss"
  loss_weight: 0.5
  smooth_l1_loss_param {
    sigma: 3.0
  }
}
